---
- name: maps
  hosts: all
  become: yes
  
  vars:
    remote_user: vagrant
    project_name: maps
    install_gdal: false
    search_server: www.search.kartan.no
    project_dir: /home/{{remote_user}}/{{project_name}}
  # roles:
    # - 
    # - elasticsearch 
    # - node
  tasks:
  - name: apt get update
    apt: update_cache=yes
  - name: install basic requirements
    apt: name={{ item.name }} state=present
    with_items:
      - { name: 'build-essential' }
      - { name: 'python-apt' }
      - { name: 'git' }

  # - name: gdal repo
  #   apt_repository: repo='deb http://ppa.launchpad.net/ubuntugis/ubuntugis-unstable/ubuntu trusty main' state=present

  - name: install zlib
    apt: name=zlib1g-dev state=present

   # Installing GDAL if necessary
  - name: Check if GDAL is installed
    command: ogrinfo --version
    register: ogrinfo_output

  - name: Download and unzip GDAL
    unarchive: src=http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0.tar.gz dest=/home/{{ remote_user }} copy=no
    when: install_gdal

  - name: Running ./configure for GDAL
    command: '"{{ item }}" chdir=/home/{{ remote_user }}/gdal-2.1.0/'
    with_items:
      - ./configure
    when: install_gdal
    # when: ogrinfo_output.stdout.find('GDAL') != 1

  - name: Running "make" for GDAL
    command: '"{{ item }}" chdir=/home/{{ remote_user }}/gdal-2.1.0/'
    with_items:
      - make
    when: install_gdal
    # when: ogrinfo_output.stdout.find('GDAL') != 1

  - name: Running "make install" for GDAL
    command: 'make install chdir=/home/{{ remote_user }}/gdal-2.1.0/'
    when: install_gdal
    # when: ogrinfo_output.stdout.find('GDAL') != 1
    notify:
    - run ldconfig

  # Installing CTB Tiler
  - name: get ctb-tiler
    git: repo=https://github.com/geo-data/cesium-terrain-builder force=yes update=yes dest={{project_dir}}/cesium-terrain-builder accept_hostkey=True

  handlers:
    - name: run ldconfig
      action: command /sbin/ldconfig